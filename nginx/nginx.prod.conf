# Production Nginx configuration with security hardening
user nginx;
worker_processes auto;
worker_rlimit_nofile 65535;

# Security: Hide nginx version
server_tokens off;

events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # Security headers map
    map $sent_http_content_type $security_headers {
        default "nosniff";
    }

    # Rate limiting zones
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=login:10m rate=3r/m;
    limit_req_zone $binary_remote_addr zone=strict:10m rate=1r/s;
    
    # Connection limiting
    limit_conn_zone $binary_remote_addr zone=addr:10m;

    # Logging with security information
    log_format security '$remote_addr - $remote_user [$time_local] '
                       '"$request" $status $body_bytes_sent '
                       '"$http_referer" "$http_user_agent" '
                       '$request_time $upstream_response_time '
                       '"$http_x_forwarded_for" "$http_x_real_ip"';

    access_log /var/log/nginx/access.log security;
    error_log /var/log/nginx/error.log warn;

    # Performance settings
    sendfile        on;
    tcp_nopush      on;
    tcp_nodelay     on;
    keepalive_timeout 30;
    types_hash_max_size 2048;
    client_max_body_size 1m;
    client_body_timeout 12;
    client_header_timeout 12;
    send_timeout 10;

    # Buffer sizes
    client_body_buffer_size 1k;
    client_header_buffer_size 1k;
    large_client_header_buffers 2 1k;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1000;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # Security: Block common attack patterns
    map $request_uri $blocked_uri {
        ~*\.(php|asp|aspx|jsp)$ 1;
        ~*/(wp-|wordpress) 1;
        ~*/\.\. 1;
        ~*/\. 1;
        default 0;
    }

    # Security: Block suspicious user agents
    map $http_user_agent $blocked_ua {
        ~*sqlmap 1;
        ~*nikto 1;
        ~*wpscan 1;
        ~*nessus 1;
        ~*masscan 1;
        ~*nmap 1;
        default 0;
    }

    # Upstream для API сервера
    upstream api_backend {
        server worktime-server-prod:3001;
        keepalive 32;
    }

    # HTTP to HTTPS redirect
    server {
        listen 80 default_server;
        server_name _;
        
        # Security headers even for redirects
        add_header X-Frame-Options DENY always;
        add_header X-Content-Type-Options nosniff always;
        
        return 301 https://$host$request_uri;
    }

    # Main HTTPS server
    server {
        listen 443 ssl http2 default_server;
        server_name yourdomain.com www.yourdomain.com;

        # SSL Configuration with modern security
        ssl_certificate /etc/nginx/ssl/cert.pem;
        ssl_certificate_key /etc/nginx/ssl/key.pem;
        ssl_protocols TLSv1.3 TLSv1.2;
        ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers off;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;
        ssl_session_tickets off;
        
        # OCSP stapling
        ssl_stapling on;
        ssl_stapling_verify on;
        resolver 8.8.8.8 8.8.4.4 valid=300s;
        resolver_timeout 5s;

        # Security headers
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
        add_header X-Frame-Options DENY always;
        add_header X-Content-Type-Options nosniff always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; connect-src 'self' wss: ws:; font-src 'self'; object-src 'none'; media-src 'self'; frame-src 'none';" always;
        add_header Permissions-Policy "geolocation=self, microphone=(), camera=(), payment=(), usb=(), magnetometer=(), gyroscope=(), speaker=()" always;

        # Security: Block malicious requests
        if ($blocked_uri) {
            return 403;
        }
        
        if ($blocked_ua) {
            return 403;
        }

        # Connection limits
        limit_conn addr 10;

        # Main application
        location / {
            root /usr/share/nginx/html;
            index index.html;
            try_files $uri $uri/ /index.html;
            
            # Cache static files
            location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
                expires 1y;
                add_header Cache-Control "public, immutable";
                add_header Vary "Accept-Encoding";
            }
        }

        # API authentication endpoints with strict rate limiting
        location /api/auth/ {
            limit_req zone=login burst=5 nodelay;
            limit_req_status 429;
            
            proxy_pass http://api_backend;
            include /etc/nginx/proxy_params;
        }

        # Admin endpoints with IP restriction
        location /api/admin/ {
            # Restrict to admin IPs only
            allow 192.168.1.0/24;
            allow 10.0.0.0/8;
            deny all;
            
            limit_req zone=strict burst=2 nodelay;
            
            proxy_pass http://api_backend;
            include /etc/nginx/proxy_params;
        }

        # Regular API endpoints
        location /api/ {
            limit_req zone=api burst=20 nodelay;
            limit_req_status 429;
            
            proxy_pass http://api_backend;
            include /etc/nginx/proxy_params;
        }

        # WebSocket support for real-time features
        location /socket.io/ {
            proxy_pass http://api_backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
        }

        # Health check endpoint (no rate limiting)
        location /health {
            proxy_pass http://api_backend;
            access_log off;
        }

        # Security: Deny access to hidden files
        location ~ /\. {
            deny all;
            return 404;
        }

        # Security: Deny access to backup files
        location ~* \.(bak|backup|old|orig|tmp)$ {
            deny all;
            return 404;
        }

        # Custom 403 page for blocked requests
        error_page 403 /403.html;
        location = /403.html {
            root /usr/share/nginx/html;
            internal;
        }

        # Custom 429 page for rate limited requests
        error_page 429 /429.html;
        location = /429.html {
            root /usr/share/nginx/html;
            internal;
        }
    }

    # Include proxy parameters
    include /etc/nginx/conf.d/*.conf;
}

# Create proxy_params file content
# /etc/nginx/proxy_params:
# proxy_set_header Host $host;
# proxy_set_header X-Real-IP $remote_addr;
# proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
# proxy_set_header X-Forwarded-Proto $scheme;
# proxy_set_header X-Request-ID $request_id;
# proxy_connect_timeout 30s;
# proxy_send_timeout 30s;
# proxy_read_timeout 30s;
# proxy_buffer_size 4k;
# proxy_buffers 8 4k;
# proxy_busy_buffers_size 8k; 