#!/bin/bash

echo "========================================"
echo "  Work Time Tracker - –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤"
echo "========================================"

cd "$(dirname "$0")"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ docker-compose.yml
if [ ! -f "docker-compose.yml" ]; then
    echo "‚ùå –§–∞–π–ª docker-compose.yml –Ω–µ –Ω–∞–π–¥–µ–Ω!"
    echo "–£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ –∑–∞–ø—É—Å–∫–∞–µ—Ç–µ —Å–∫—Ä–∏–ø—Ç –∏–∑ –∫–æ—Ä–Ω–µ–≤–æ–π –ø–∞–ø–∫–∏ –ø—Ä–æ–µ–∫—Ç–∞"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ Docker
if ! command -v docker &> /dev/null; then
    echo "‚ùå Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!"
    echo "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker Desktop: https://www.docker.com/products/docker-desktop/"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ Docker –∑–∞–ø—É—â–µ–Ω
if ! docker info &> /dev/null; then
    echo "‚ùå Docker –Ω–µ –∑–∞–ø—É—â–µ–Ω!"
    echo "–ó–∞–ø—É—Å—Ç–∏—Ç–µ Docker Desktop –∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É"
    exit 1
fi

echo ""
echo "üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
docker_status=$(docker-compose ps --format table 2>/dev/null)
if [ $? -eq 0 ]; then
    echo "$docker_status"
else
    echo "‚ö†Ô∏è  –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤"
    docker-compose ps
fi
echo ""

echo "üåê –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Å–µ—Ä–≤–∏—Å–æ–≤..."

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ HTTP —Å–µ—Ä–≤–∏—Å–∞
check_http_service() {
    local name="$1"
    local url="$2"
    local timeout="$3"
    
    echo -n "–ü—Ä–æ–≤–µ—Ä—è–µ–º $name ($url)... "
    if command -v curl &> /dev/null; then
        if curl -s --max-time "$timeout" "$url" >/dev/null 2>&1; then
            echo "‚úÖ —Ä–∞–±–æ—Ç–∞–µ—Ç"
            return 0
        else
            echo "‚ùå –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
            return 1
        fi
    else
        echo "‚ö†Ô∏è  curl –Ω–µ –Ω–∞–π–¥–µ–Ω"
        return 1
    fi
}

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–µ—Ä–≤–µ—Ä –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
check_http_service "API –°–µ—Ä–≤–µ—Ä" "http://localhost:3001/api/health" 5

# –ü—Ä–æ–≤–µ—Ä—è–µ–º API endpoints
check_http_service "API Status" "http://localhost:3001/api/status" 3

# –ü—Ä–æ–≤–µ—Ä—è–µ–º PgAdmin
check_http_service "PgAdmin" "http://localhost:5050" 5

# –ü—Ä–æ–≤–µ—Ä—è–µ–º PostgreSQL
echo -n "–ü—Ä–æ–≤–µ—Ä—è–µ–º PostgreSQL (localhost:5433)... "
if docker exec worktime-postgres pg_isready -h localhost -p 5432 >/dev/null 2>&1; then
    echo "‚úÖ —Ä–∞–±–æ—Ç–∞–µ—Ç"
    
    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î
    echo -n "–ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î worktime_tracker... "
    if docker exec worktime-postgres psql -h localhost -p 5432 -U postgres -d worktime_tracker -c "SELECT 1;" >/dev/null 2>&1; then
        echo "‚úÖ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ OK"
    else
        echo "‚ö†Ô∏è  –ë–î –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞ (–≤–æ–∑–º–æ–∂–Ω–æ –Ω–µ —Å–æ–∑–¥–∞–Ω—ã —Ç–∞–±–ª–∏—Ü—ã)"
    fi
else
    echo "‚ùå –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
fi

echo ""
echo "üìä –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ Node.js –ø—Ä–æ—Ü–µ—Å—Å–æ–≤..."

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–æ—Ü–µ—Å—Å—ã –Ω–∞ –ø–æ—Ä—Ç–∞—Ö
for port in 3001 19006 3000 8081; do
    if command -v lsof &> /dev/null; then
        pid=$(lsof -ti:$port 2>/dev/null)
        if [ ! -z "$pid" ]; then
            process_name=$(ps -p $pid -o comm= 2>/dev/null)
            echo "‚úÖ –ü–æ—Ä—Ç $port –∑–∞–Ω—è—Ç –ø—Ä–æ—Ü–µ—Å—Å–æ–º: $process_name (PID: $pid)"
        else
            echo "‚ö™ –ü–æ—Ä—Ç $port —Å–≤–æ–±–æ–¥–µ–Ω"
        fi
    else
        echo "‚ö†Ô∏è  lsof –Ω–µ –Ω–∞–π–¥–µ–Ω, –Ω–µ –º–æ–≥—É –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ—Ä—Ç—ã"
        break
    fi
done

echo ""
echo "üìÇ –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∞–∂–Ω—ã–µ —Ñ–∞–π–ª—ã –∏ –ø–∞–ø–∫–∏..."

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –≤–∞–∂–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
files_to_check=(
    "server/.env"
    "server/package.json"
    "package.json"
    "server/node_modules"
    "node_modules"
    "server/dist"
    "server/logs"
)

for file in "${files_to_check[@]}"; do
    if [ -e "$file" ]; then
        echo "‚úÖ $file —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
    else
        echo "‚ùå $file –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç"
    fi
done

echo ""
echo "üìã –ü–æ—Å–ª–µ–¥–Ω–∏–µ 10 —Å—Ç—Ä–æ–∫ –ª–æ–≥–æ–≤ —Å–µ—Ä–≤–µ—Ä–∞:"
echo ""
echo "--- –õ–æ–≥–∏ —Å–µ—Ä–≤–µ—Ä–∞ ---"
if docker-compose logs --tail=10 server 2>/dev/null; then
    echo "‚úÖ –õ–æ–≥–∏ –ø–æ–ª—É—á–µ–Ω—ã"
else
    echo "‚ö†Ô∏è  –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –ª–æ–≥–∏ —Å–µ—Ä–≤–µ—Ä–∞"
fi

echo ""
echo "--- –õ–æ–≥–∏ PostgreSQL ---"
if docker-compose logs --tail=5 postgres 2>/dev/null; then
    echo "‚úÖ –õ–æ–≥–∏ PostgreSQL –ø–æ–ª—É—á–µ–Ω—ã"
else
    echo "‚ö†Ô∏è  –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –ª–æ–≥–∏ PostgreSQL"
fi

echo ""
echo "üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ Docker:"
echo "–ó–∞–ø—É—â–µ–Ω–Ω—ã–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã: $(docker ps -q | wc -l)"
echo "–í—Å–µ–≥–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤: $(docker ps -aq | wc -l)"

if command -v docker &> /dev/null; then
    docker_version=$(docker --version | cut -d' ' -f3 | cut -d',' -f1)
    echo "–í–µ—Ä—Å–∏—è Docker: $docker_version"
fi

echo ""
echo "üí° –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
echo "‚Ä¢ –ü–æ–ª–Ω—ã–µ –ª–æ–≥–∏: docker-compose logs -f"
echo "‚Ä¢ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫: docker-compose restart"
echo "‚Ä¢ –û—Å—Ç–∞–Ω–æ–≤–∫–∞: ./stop-project-mac.sh"
echo "‚Ä¢ –ó–∞–ø—É—Å–∫: ./quick-start-mac.sh"
echo ""
echo "–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è..."
read -r 