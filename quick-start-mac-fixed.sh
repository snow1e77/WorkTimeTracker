#!/bin/bash

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–æ–¥–∏—Ä–æ–≤–∫–∏ UTF-8
export LC_ALL=en_US.UTF-8

echo "========================================"
echo "  Work Time Tracker - –ë—ã—Å—Ç—Ä—ã–π –∑–∞–ø—É—Å–∫ macOS (–ò–°–ü–†–ê–í–õ–ï–ù–ù–ê–Ø –í–ï–†–°–ò–Ø)"
echo "========================================"

# –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –ø–∞–ø–∫—É –ø—Ä–æ–µ–∫—Ç–∞
cd "$(dirname "$0")"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ docker-compose.yml
if [ ! -f "docker-compose.yml" ]; then
    echo "‚ùå –§–∞–π–ª docker-compose.yml –Ω–µ –Ω–∞–π–¥–µ–Ω!"
    echo "–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –∑–∞–ø—É—Å–∫–∞–µ—Ç–µ —Å–∫—Ä–∏–ø—Ç –∏–∑ –∫–æ—Ä–Ω–µ–≤–æ–π –ø–∞–ø–∫–∏ –ø—Ä–æ–µ–∫—Ç–∞"
    exit 1
fi

echo ""
echo "[1/8] –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ Docker..."
if ! command -v docker &> /dev/null; then
    echo "‚ùå Docker –Ω–µ –Ω–∞–π–¥–µ–Ω! –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker Desktop –∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç."
    echo "–°–∫–∞—á–∞—Ç—å: https://www.docker.com/products/docker-desktop/"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ Docker –∑–∞–ø—É—â–µ–Ω
if ! docker info &> /dev/null; then
    echo "‚ùå Docker –Ω–µ –∑–∞–ø—É—â–µ–Ω! –ó–∞–ø—É—Å—Ç–∏—Ç–µ Docker Desktop –∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É."
    exit 1
fi
echo "‚úÖ Docker –Ω–∞–π–¥–µ–Ω –∏ –∑–∞–ø—É—â–µ–Ω"

echo ""
echo "[2/8] –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ Node.js..."
if ! command -v node &> /dev/null; then
    echo "‚ùå Node.js –Ω–µ –Ω–∞–π–¥–µ–Ω! –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Node.js –∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç."
    echo "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ —á–µ—Ä–µ–∑ Homebrew: brew install node@18"
    echo "–ò–ª–∏ —Å–∫–∞—á–∞—Ç—å: https://nodejs.org/"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–µ—Ä—Å–∏—é Node.js
node_version=$(node -v | sed 's/v//' | cut -d'.' -f1)
if [ "$node_version" -lt 16 ]; then
    echo "‚ö†Ô∏è  Node.js –≤–µ—Ä—Å–∏–∏ $node_version –æ–±–Ω–∞—Ä—É–∂–µ–Ω. –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –≤–µ—Ä—Å–∏—è 16 –∏–ª–∏ –≤—ã—à–µ"
fi
echo "‚úÖ Node.js –Ω–∞–π–¥–µ–Ω (–≤–µ—Ä—Å–∏—è: $(node -v))"

echo ""
echo "[3/8] –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ Docker Compose..."
if ! command -v docker-compose &> /dev/null; then
    echo "‚ùå Docker Compose –Ω–µ –Ω–∞–π–¥–µ–Ω! –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ Docker Desktop —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ."
    exit 1
fi
echo "‚úÖ Docker Compose –Ω–∞–π–¥–µ–Ω"

echo ""
echo "[4/8] –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–∞–≤–∞ –Ω–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–æ–≤..."
chmod +x *.sh 2>/dev/null || true
chmod +x scripts/*.sh 2>/dev/null || true
echo "‚úÖ –ü—Ä–∞–≤–∞ –Ω–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"

echo ""
echo "[5/8] –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
if [ ! -d "node_modules" ]; then
    echo "üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞..."
    npm install
    if [ $? -ne 0 ]; then
        echo "‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞"
        exit 1
    fi
fi

if [ ! -d "server/node_modules" ]; then
    echo "üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —Å–µ—Ä–≤–µ—Ä–∞..."
    cd server && npm install && cd ..
    if [ $? -ne 0 ]; then
        echo "‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π —Å–µ—Ä–≤–µ—Ä–∞"
        exit 1
    fi
fi

echo "‚úÖ –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"

echo ""
echo "[6/8] –°–æ–∑–¥–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–∞–ø–∫–∏ –∏ —Ñ–∞–π–ª—ã..."

# –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫–∏ –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç
mkdir -p server/logs
mkdir -p server/uploads
mkdir -p secrets
echo "üìÅ –°–æ–∑–¥–∞–Ω—ã –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–∞–ø–∫–∏"

if [ ! -f "server/.env" ]; then
    echo "üìù –°–æ–∑–¥–∞–µ–º .env —Ñ–∞–π–ª..."
    cat > server/.env << 'EOF'
# Database Configuration (Docker)
DB_HOST=localhost
DB_PORT=5433
DB_NAME=worktime_tracker
DB_USER=postgres
DB_PASSWORD=postgres

# JWT Configuration
JWT_SECRET=development_jwt_secret_key_change_in_production_32_chars_minimum_macOS_fix
JWT_EXPIRES_IN=7d
JWT_REFRESH_EXPIRES_IN=30d

# Server Configuration
PORT=3001
NODE_ENV=development

# Rate Limiting
RATE_LIMIT_WINDOW_MS=900000
RATE_LIMIT_MAX_REQUESTS=100

# CORS Origins
CORS_ORIGINS=http://localhost:19006,http://localhost:3000,http://localhost:8081

# Logging
LOG_LEVEL=debug
LOG_FILE=logs/app.log

# Security
HELMET_CSP_ENABLED=false
TRUST_PROXY=false

# API
API_BASE_URL=http://localhost:3001
EOF
    echo "‚úÖ –§–∞–π–ª .env —Å–æ–∑–¥–∞–Ω —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ –¥–ª—è macOS"
fi

echo ""
echo "[7/8] –ó–∞–ø—É—Å–∫–∞–µ–º Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã..."
echo "üê≥ –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—Ç–∞—Ä—ã—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."

# –ü–æ–ª–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
docker-compose down --volumes --remove-orphans 2>/dev/null || true

# –ñ–¥–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏
sleep 3

echo "üê≥ –ó–∞–ø—É—Å–∫ PostgreSQL –∏ –¥—Ä—É–≥–∏—Ö —Å–µ—Ä–≤–∏—Å–æ–≤..."

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è Docker
export DOCKER_BUILDKIT=0
export COMPOSE_DOCKER_CLI_BUILD=0

docker-compose up -d

if [ $? -ne 0 ]; then
    echo "‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤"
    echo "–£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ Docker Desktop –∑–∞–ø—É—â–µ–Ω"
    echo "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤—Ä—É—á–Ω—É—é: docker-compose up -d"
    exit 1
fi

echo "‚úÖ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –∑–∞–ø—É—â–µ–Ω—ã"

echo ""
echo "‚è±Ô∏è  –ñ–¥–µ–º –ø–æ–ª–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞ PostgreSQL (30 —Å–µ–∫—É–Ω–¥)..."
sleep 30

echo ""
echo "üìä –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
docker-compose ps

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ PostgreSQL –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –≥–æ—Ç–æ–≤
echo ""
echo "üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—å PostgreSQL..."
max_attempts=30
attempt=0
while [ $attempt -lt $max_attempts ]; do
    if docker exec worktime-postgres pg_isready -h localhost -p 5432 -U postgres &>/dev/null; then
        echo "‚úÖ PostgreSQL –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ"
        break
    fi
    ((attempt++))
    echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ PostgreSQL... –ø–æ–ø—ã—Ç–∫–∞ $attempt/$max_attempts"
    sleep 2
done

if [ $attempt -eq $max_attempts ]; then
    echo "‚ùå PostgreSQL –Ω–µ –∑–∞–ø—É—Å—Ç–∏–ª—Å—è –∑–∞ –æ—Ç–≤–µ–¥–µ–Ω–Ω–æ–µ –≤—Ä–µ–º—è"
    echo "–õ–æ–≥–∏ PostgreSQL:"
    docker-compose logs postgres
    exit 1
fi

echo ""
echo "[8/8] –í—ã–ø–æ–ª–Ω—è–µ–º –º–∏–≥—Ä–∞—Ü–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
cd server

echo "üî® –°–±–æ—Ä–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞..."
npm run build
if [ $? -ne 0 ]; then
    echo "‚ö†Ô∏è  –û—à–∏–±–∫–∞ —Å–±–æ—Ä–∫–∏ —Å–µ—Ä–≤–µ—Ä–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –≤—Ä—É—á–Ω—É—é:"
    echo "cd server && npm run build"
    cd ..
    exit 1
fi

echo "üóÑÔ∏è  –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü –∏ –ø–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞..."
npm run migrate

if [ $? -ne 0 ]; then
    echo "‚ö†Ô∏è  –û—à–∏–±–∫–∞ –º–∏–≥—Ä–∞—Ü–∏–π. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î"
    echo "–õ–æ–≥–∏ —Å–µ—Ä–≤–µ—Ä–∞:"
    docker-compose logs server
    echo ""
    echo "–õ–æ–≥–∏ PostgreSQL:"
    docker-compose logs postgres
    cd ..
    exit 1
else
    echo "‚úÖ –ú–∏–≥—Ä–∞—Ü–∏–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ"
    
    # –ó–∞–ø–æ–ª–Ω—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
    echo "üìä –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ..."
    npm run seed || echo "‚ö†Ô∏è  –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω—ã (–≤–æ–∑–º–æ–∂–Ω–æ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç)"
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    echo "üë§ –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è..."
    npm run create-test-worker || echo "‚ö†Ô∏è  –¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ —Å–æ–∑–¥–∞–Ω (–≤–æ–∑–º–æ–∂–Ω–æ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç)"
fi

cd ..

echo ""
echo "üîç –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤..."

# –ü—Ä–æ–≤–µ—Ä—è–µ–º API
echo -n "–ü—Ä–æ–≤–µ—Ä—è–µ–º API –°–µ—Ä–≤–µ—Ä... "
sleep 5
if curl -s --max-time 10 "http://localhost:3001/api/health" >/dev/null 2>&1; then
    echo "‚úÖ —Ä–∞–±–æ—Ç–∞–µ—Ç"
else
    echo "‚ùå –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
    echo "–õ–æ–≥–∏ —Å–µ—Ä–≤–µ—Ä–∞:"
    docker-compose logs --tail=20 server
fi

echo ""
echo "üéâ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!"
echo "================================="
echo ""
echo "üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã:"
echo "‚Ä¢ API –°–µ—Ä–≤–µ—Ä:     http://localhost:3001"
echo "‚Ä¢ API Health:     http://localhost:3001/api/health"
echo "‚Ä¢ PgAdmin:        http://localhost:5050 (admin@worktime.com / admin)"
echo "‚Ä¢ PostgreSQL:     localhost:5433 (postgres / postgres)"
echo ""
echo "üöÄ –î–ª—è –∑–∞–ø—É—Å–∫–∞ –º–æ–±–∏–ª—å–Ω–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –≤—ã–ø–æ–ª–Ω–∏—Ç–µ:"
echo "npm start"
echo ""
echo "üåê –î–ª—è –∑–∞–ø—É—Å–∫–∞ –≤–µ–±-–≤–µ—Ä—Å–∏–∏ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ:"
echo "npm run web"
echo ""
echo "üë§ –î–∞–Ω–Ω—ã–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:"
echo "‚Ä¢ –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: +79999999999"
echo "‚Ä¢ –†–æ–ª—å: worker"
echo "‚Ä¢ –í—Ö–æ–¥: —Ç–æ–ª—å–∫–æ –ø–æ –Ω–æ–º–µ—Ä—É —Ç–µ–ª–µ—Ñ–æ–Ω–∞"
echo ""
echo "üõë –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ:"
echo "./stop-project-mac.sh"
echo ""
echo "üîß –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
echo "‚Ä¢ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞: ./check-services-mac.sh"
echo "‚Ä¢ –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Ä–∞–±–æ—Ç–Ω–∏–∫–∞: ./create-test-worker.sh"
echo "‚Ä¢ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–∞–≤: ./fix-permissions-mac.sh"
echo ""
echo "üí° –ï—Å–ª–∏ –≤–æ–∑–Ω–∏–∫–ª–∏ –ø—Ä–æ–±–ª–µ–º—ã:"
echo "‚Ä¢ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏: docker-compose logs"
echo "‚Ä¢ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫: docker-compose restart"
echo "‚Ä¢ –ü–æ–ª–Ω—ã–π —Å–±—Ä–æ—Å: docker-compose down --volumes && ./quick-start-mac-fixed.sh"
echo ""

read -p "–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è –∏–ª–∏ Ctrl+C –¥–ª—è –≤—ã—Ö–æ–¥–∞..." 