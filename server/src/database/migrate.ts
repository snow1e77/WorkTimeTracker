import fs from 'fs';
import path from 'path';
import { pool, testConnection } from '../config/database';

const runMigrations = async (): Promise<void> => {
  try {
    console.log('üîÑ –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...');
    const isConnected = await testConnection();
    
    if (!isConnected) {
      console.error('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö');
      process.exit(1);
    }
    
    console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ');
    console.log('üîÑ –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π...');
    
    // –ß–∏—Ç–∞–µ–º —Ñ–∞–π–ª –º–∏–≥—Ä–∞—Ü–∏–π
    const migrationsPath = path.join(__dirname, 'migrations.sql');
    const migrations = fs.readFileSync(migrationsPath, 'utf8');
    
    // –†–∞–∑–¥–µ–ª—è–µ–º SQL –∫–æ–º–∞–Ω–¥—ã (—Ä–∞–∑–¥–µ–ª—è–µ–º –ø–æ —Ç–æ—á–∫–∞–º —Å –∑–∞–ø—è—Ç–æ–π, –Ω–æ —É—á–∏—Ç—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏–∏)
    const statements = migrations
      .split(/;\s*\n/)
      .map(stmt => stmt.trim())
      .filter(stmt => stmt.length > 0 && !stmt.startsWith('--'));
    
    const client = await pool.connect();
    
    try {
      let successful = 0;
      let skipped = 0;
      
      for (const statement of statements) {
        if (!statement) continue;
        
        try {
          await client.query(statement + (statement.endsWith(';') ? '' : ';'));
          successful++;
        } catch (error: any) {
          // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è
          if (error.code === '42710' || // —Ç—Ä–∏–≥–≥–µ—Ä —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
              error.code === '42P07' || // —Ç–∞–±–ª–∏—Ü–∞ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
              error.code === '42723' || // —Ñ—É–Ω–∫—Ü–∏—è —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
              error.code === '42704' || // –∏–Ω–¥–µ–∫—Å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
              error.code === '42P06' || // —Å—Ö–µ–º–∞ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
              error.code === '42P16' || // —Ä–æ–ª—å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
              error.code === '42P17' || // —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
              error.message.includes('—É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç') ||
              error.message.includes('already exists')) {
            console.log(`‚ö†Ô∏è  –ü—Ä–æ–ø—É—â–µ–Ω–æ (—É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç): ${statement.substring(0, 50)}...`);
            skipped++;
          } else {
            console.error(`‚ùå –û—à–∏–±–∫–∞ –≤ SQL: ${statement.substring(0, 50)}...`);
            console.error('–î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏:', error.message);
            // –ù–µ –ø—Ä–µ—Ä—ã–≤–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ, –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º —Å —Å–ª–µ–¥—É—é—â–µ–π –∫–æ–º–∞–Ω–¥–æ–π
          }
        }
      }
      
      console.log(`‚úÖ –ú–∏–≥—Ä–∞—Ü–∏–∏ –∑–∞–≤–µ—Ä—à–µ–Ω—ã: ${successful} –≤—ã–ø–æ–ª–Ω–µ–Ω–æ, ${skipped} –ø—Ä–æ–ø—É—â–µ–Ω–æ`);
      
    } finally {
      client.release();
    }
    
  } catch (error) {
    console.error('‚ùå –û–±—â–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –º–∏–≥—Ä–∞—Ü–∏–π:', error);
    process.exit(1);
  } finally {
    await pool.end();
  }
};

// –ó–∞–ø—É—Å–∫ –º–∏–≥—Ä–∞—Ü–∏–π, –µ—Å–ª–∏ —Ñ–∞–π–ª –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –Ω–∞–ø—Ä—è–º—É—é
if (require.main === module) {
  runMigrations();
}

export default runMigrations; 