version: '3.8'

services:
  db:
    image: postgres:15-alpine
    container_name: worktime-db
    environment:
      POSTGRES_DB: worktime_tracker_prod
      POSTGRES_USER: worktime_user
      POSTGRES_PASSWORD: ${DB_PASSWORD:-YourSecureDBPassword123!}
      POSTGRES_INITDB_ARGS: '--encoding=UTF8 --locale=C'
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./server/database/migrations.sql:/docker-entrypoint-initdb.d/01-migrations.sql:ro
    networks:
      - worktime-network
    restart: unless-stopped
    healthcheck:
      test:
        ['CMD-SHELL', 'pg_isready -U worktime_user -d worktime_tracker_prod']
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    logging:
      driver: 'json-file'
      options:
        max-size: '10m'
        max-file: '3'

  server:
    build:
      context: ./server
      dockerfile: Dockerfile.prod
      args:
        NODE_ENV: production
    container_name: worktime-server
    env_file:
      - ./server/.env
    environment:
      - NODE_ENV=production
      - DB_HOST=db
      - DB_PORT=5432
    volumes:
      - ./server/logs:/app/logs
      - ./server/uploads:/app/uploads
      - /etc/localtime:/etc/localtime:ro
    depends_on:
      db:
        condition: service_healthy
    networks:
      - worktime-network
    restart: unless-stopped
    healthcheck:
      test:
        [
          'CMD',
          'node',
          '-e',
          "require('http').get('http://localhost:3001/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    logging:
      driver: 'json-file'
      options:
        max-size: '10m'
        max-file: '5'
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /tmp
      - /var/tmp

  nginx:
    image: nginx:alpine
    container_name: worktime-nginx
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - ./nginx/nginx.prod.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl.conf:/etc/nginx/conf.d/ssl.conf:ro
      - ./src:/usr/share/nginx/html:ro
      - /var/www/certbot:/var/www/certbot:ro
      - ./nginx/logs:/var/log/nginx
      - /etc/localtime:/etc/localtime:ro
    networks:
      - worktime-network
    depends_on:
      server:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test:
        [
          'CMD',
          'wget',
          '--quiet',
          '--tries=1',
          '--spider',
          'http://localhost/health',
          '||',
          'exit',
          '1',
        ]
      interval: 30s
      timeout: 10s
      retries: 3
    logging:
      driver: 'json-file'
      options:
        max-size: '10m'
        max-file: '3'
    security_opt:
      - no-new-privileges:true

  # Redis для кэширования и сессий (опционально)
  redis:
    image: redis:alpine
    container_name: worktime-redis
    command: redis-server --requirepass ${REDIS_PASSWORD:-defaultRedisPassword}
    volumes:
      - redis_data:/data
      - /etc/localtime:/etc/localtime:ro
    networks:
      - worktime-network
    restart: unless-stopped
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 30s
      timeout: 10s
      retries: 3
    logging:
      driver: 'json-file'
      options:
        max-size: '10m'
        max-file: '3'
    security_opt:
      - no-new-privileges:true

volumes:
  db_data:
    driver: local
  redis_data:
    driver: local

networks:
  worktime-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
