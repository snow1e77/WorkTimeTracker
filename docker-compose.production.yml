version: '3.8'

networks:
  worktime-network:
    driver: bridge

volumes:
  db_data:
    driver: local
  ssl_certs:
    driver: local
  nginx_conf:
    driver: local

services:
  # PostgreSQL База данных
  db:
    image: postgres:15-alpine
    container_name: worktime-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: worktime_tracker_prod
      POSTGRES_USER: worktime_user
      POSTGRES_PASSWORD: ${DB_PASSWORD:-${RANDOM_DB_PASSWORD}}
      POSTGRES_INITDB_ARGS: '--encoding=UTF8 --locale=C'
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./server/database/migrations.sql:/docker-entrypoint-initdb.d/01-migrations.sql:ro
    networks:
      - worktime-network
    healthcheck:
      test:
        ['CMD-SHELL', 'pg_isready -U worktime_user -d worktime_tracker_prod']
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    logging:
      driver: 'json-file'
      options:
        max-size: '10m'
        max-file: '3'

  # Backend API сервер
  api:
    build:
      context: ./server
      dockerfile: Dockerfile.prod
    container_name: worktime-api
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 3001
      DATABASE_URL: postgresql://worktime_user:${DB_PASSWORD:-${RANDOM_DB_PASSWORD}}@db:5432/worktime_tracker_prod
      JWT_SECRET: ${JWT_SECRET:-${RANDOM_JWT_SECRET}}
      CORS_ORIGINS: https://gabygg.nu,https://www.gabygg.nu
      LOG_LEVEL: info
      API_RATE_LIMIT: 100
      AUTH_RATE_LIMIT: 5
    volumes:
      - ./server/logs:/app/logs
      - ./server/uploads:/app/uploads
      - ./server/backups:/app/backups
    networks:
      - worktime-network
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:3001/health']
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    logging:
      driver: 'json-file'
      options:
        max-size: '20m'
        max-file: '5'

  # Frontend приложение
  web:
    build:
      context: .
      dockerfile: web.Dockerfile.prod
    container_name: worktime-web
    restart: unless-stopped
    volumes:
      - ./dist:/usr/share/nginx/html:ro
      - ./nginx/nginx.prod.conf:/etc/nginx/nginx.conf:ro
    networks:
      - worktime-network
    depends_on:
      - api
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:80/health']
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    logging:
      driver: 'json-file'
      options:
        max-size: '10m'
        max-file: '3'

  # Nginx Reverse Proxy с SSL
  nginx:
    image: nginx:alpine
    container_name: worktime-nginx
    restart: unless-stopped
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - ./nginx/nginx.ssl.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - ssl_certs:/etc/letsencrypt:ro
      - ./nginx/logs:/var/log/nginx
    networks:
      - worktime-network
    depends_on:
      - web
      - api
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:80/health']
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    logging:
      driver: 'json-file'
      options:
        max-size: '15m'
        max-file: '5'

  # Certbot для SSL сертификатов
  certbot:
    image: certbot/certbot
    container_name: worktime-certbot
    volumes:
      - ssl_certs:/etc/letsencrypt
      - ./nginx/certbot-webroot:/var/www/certbot
    command: certonly --webroot --webroot-path=/var/www/certbot --email admin@gabygg.nu --agree-tos --no-eff-email --keep-until-expiring -d gabygg.nu -d www.gabygg.nu
    depends_on:
      - nginx

  # Redis для кеширования (опционально)
  redis:
    image: redis:7-alpine
    container_name: worktime-redis
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-${RANDOM_REDIS_PASSWORD}}
    volumes:
      - ./redis/data:/data
    networks:
      - worktime-network
    healthcheck:
      test: ['CMD', 'redis-cli', '--raw', 'incr', 'ping']
      interval: 30s
      timeout: 10s
      retries: 3
    logging:
      driver: 'json-file'
      options:
        max-size: '5m'
        max-file: '3'

  # Watchtower для автообновлений
  watchtower:
    image: containrrr/watchtower
    container_name: worktime-watchtower
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      WATCHTOWER_POLL_INTERVAL: 86400 # Проверка раз в день
      WATCHTOWER_CLEANUP: true
      WATCHTOWER_INCLUDE_STOPPED: true
      WATCHTOWER_NOTIFICATIONS: email
      WATCHTOWER_NOTIFICATION_EMAIL_FROM: notifications@gabygg.nu
      WATCHTOWER_NOTIFICATION_EMAIL_TO: admin@gabygg.nu
    logging:
      driver: 'json-file'
      options:
        max-size: '5m'
        max-file: '2'
