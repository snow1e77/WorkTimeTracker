# Production Deployment Script for WorkTime Tracker
# –ó–∞–ø—É—Å–∫–∞—Ç—å —Å –ø—Ä–∞–≤–∞–º–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞

param(
    [Parameter(Mandatory=$false)]
    [string]$Domain = "yourdomain.com",
    
    [Parameter(Mandatory=$false)]
    [switch]$SkipSSL
)

Write-Host "üöÄ Starting Production Deployment for WorkTime Tracker" -ForegroundColor Green

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è Docker
if (!(Get-Command docker -ErrorAction SilentlyContinue)) {
    Write-Error "Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker Desktop –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞."
    exit 1
}

if (!(Get-Command docker-compose -ErrorAction SilentlyContinue)) {
    Write-Error "Docker Compose –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker Compose –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞."
    exit 1
}

# –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–æ–µ–∫—Ç–∞
$ScriptPath = Split-Path -Parent $MyInvocation.MyCommand.Path
$ProjectRoot = Split-Path -Parent $ScriptPath
Set-Location $ProjectRoot

Write-Host "üìÅ –†–∞–±–æ—Ç–∞–µ–º –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏: $ProjectRoot" -ForegroundColor Yellow

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ .env —Ñ–∞–π–ª–∞
$EnvFile = "production.env"
if (!(Test-Path $EnvFile)) {
    Write-Host "‚ö†Ô∏è –§–∞–π–ª $EnvFile –Ω–µ –Ω–∞–π–¥–µ–Ω. –°–æ–∑–¥–∞–µ–º —à–∞–±–ª–æ–Ω..." -ForegroundColor Yellow
    
    @"
# Production Environment Variables
# –í–ù–ò–ú–ê–ù–ò–ï: –ó–∞–º–µ–Ω–∏—Ç–µ –≤—Å–µ –∑–Ω–∞—á–µ–Ω–∏—è –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–µ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ!

# Database Configuration
DB_NAME=worktime_production
DB_USER=worktime_user
DB_PASSWORD=CHANGE_THIS_STRONG_PASSWORD
REDIS_PASSWORD=CHANGE_THIS_REDIS_PASSWORD

# JWT Secrets (–û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û –ó–ê–ú–ï–ù–ò–¢–ï!)
JWT_ACCESS_SECRET=CHANGE_THIS_TO_STRONG_SECRET_256_BITS_MINIMUM
JWT_REFRESH_SECRET=CHANGE_THIS_TO_STRONG_REFRESH_SECRET_256_BITS_MINIMUM

# Twilio Configuration
TWILIO_ACCOUNT_SID=your_twilio_account_sid
TWILIO_AUTH_TOKEN=your_twilio_auth_token
TWILIO_PHONE_NUMBER=+1234567890

# CORS Origins
CORS_ORIGINS=https://$Domain,https://app.$Domain
"@ | Out-File -FilePath $EnvFile -Encoding UTF8
    
    Write-Host "‚ùó –í–ê–ñ–ù–û: –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ —Ñ–∞–π–ª $EnvFile –ø–µ—Ä–µ–¥ –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ–º!" -ForegroundColor Red
    Write-Host "–ù–∞–∂–º–∏—Ç–µ –ª—é–±—É—é –∫–ª–∞–≤–∏—à—É –ø–æ—Å–ª–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ñ–∞–π–ª–∞..." -ForegroundColor Yellow
    $null = $Host.UI.RawUI.ReadKey("NoEcho,IncludeKeyDown")
}

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ Node.js –∏ npm
if (!(Get-Command node -ErrorAction SilentlyContinue)) {
    Write-Error "Node.js –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Node.js –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞."
    exit 1
}

if (!(Get-Command npm -ErrorAction SilentlyContinue)) {
    Write-Error "npm –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ npm –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞."
    exit 1
}

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
Write-Host "üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏..." -ForegroundColor Blue
try {
    npm install
    Write-Host "‚úÖ –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã" -ForegroundColor Green
} catch {
    Write-Error "–û—à–∏–±–∫–∞ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π: $_"
    exit 1
}

# –°–±–æ—Ä–∫–∞ –≤–µ–±-–≤–µ—Ä—Å–∏–∏
Write-Host "üèóÔ∏è –°–æ–±–∏—Ä–∞–µ–º –≤–µ–±-–≤–µ—Ä—Å–∏—é –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è..." -ForegroundColor Blue
try {
    # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—É—é —Å–±–æ—Ä–∫—É
    if (Test-Path "dist") {
        Remove-Item -Recurse -Force "dist"
        Write-Host "üóëÔ∏è –°—Ç–∞—Ä–∞—è —Å–±–æ—Ä–∫–∞ —É–¥–∞–ª–µ–Ω–∞" -ForegroundColor Yellow
    }
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º —Å–±–æ—Ä–∫—É
    npm run build:web
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Å–±–æ—Ä–∫–∏
    if (!(Test-Path "dist")) {
        Write-Error "–°–±–æ—Ä–∫–∞ –≤–µ–±-–≤–µ—Ä—Å–∏–∏ –Ω–µ —É–¥–∞–ª–∞—Å—å. –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è 'dist' –Ω–µ —Å–æ–∑–¥–∞–Ω–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –≤—ã—à–µ."
        exit 1
    }
    
    if (!(Test-Path "dist/index.html")) {
        Write-Error "–°–±–æ—Ä–∫–∞ –≤–µ–±-–≤–µ—Ä—Å–∏–∏ –Ω–µ —É–¥–∞–ª–∞—Å—å. –§–∞–π–ª index.html –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ 'dist'."
        exit 1
    }
    
    Write-Host "‚úÖ –í–µ–±-–≤–µ—Ä—Å–∏—è —Å–æ–±—Ä–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ" -ForegroundColor Green
} catch {
    Write-Error "–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–±–æ—Ä–∫–µ –≤–µ–±-–≤–µ—Ä—Å–∏–∏: $_"
    exit 1
}

# –°–±–æ—Ä–∫–∞ —Å–µ—Ä–≤–µ—Ä–Ω–æ–π —á–∞—Å—Ç–∏
Write-Host "üèóÔ∏è –°–æ–±–∏—Ä–∞–µ–º —Å–µ—Ä–≤–µ—Ä–Ω—É—é —á–∞—Å—Ç—å..." -ForegroundColor Blue
try {
    Push-Location server
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —Å–µ—Ä–≤–µ—Ä–∞ (–≤–∫–ª—é—á–∞—è dev –¥–ª—è —Å–±–æ—Ä–∫–∏)
    npm ci
    
    # –°–æ–±–∏—Ä–∞–µ–º TypeScript
    npm run build
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Å–±–æ—Ä–∫–∏
    if (!(Test-Path "dist/index.js")) {
        Write-Error "–°–±–æ—Ä–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ –Ω–µ —É–¥–∞–ª–∞—Å—å. –§–∞–π–ª dist/index.js –Ω–µ –Ω–∞–π–¥–µ–Ω."
        Pop-Location
        exit 1
    }
    
    Pop-Location
    Write-Host "‚úÖ –°–µ—Ä–≤–µ—Ä–Ω–∞—è —á–∞—Å—Ç—å —Å–æ–±—Ä–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ" -ForegroundColor Green
} catch {
    Pop-Location
    Write-Error "–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–±–æ—Ä–∫–µ —Å–µ—Ä–≤–µ—Ä–Ω–æ–π —á–∞—Å—Ç–∏: $_"
    exit 1
}

# –°–æ–∑–¥–∞–µ–º SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã (—Å–∞–º–æ–ø–æ–¥–ø–∏—Å–∞–Ω–Ω—ã–µ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è)
if (!$SkipSSL) {
    Write-Host "üîê –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã..." -ForegroundColor Blue
    
    if (!(Test-Path "nginx/ssl")) {
        New-Item -ItemType Directory -Path "nginx/ssl" -Force
    }
    
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å–∞–º–æ–ø–æ–¥–ø–∏—Å–∞–Ω–Ω—ã–π —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    # –í –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ä–µ–∞–ª—å–Ω—ã–µ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã –æ—Ç Let's Encrypt –∏–ª–∏ –¥—Ä—É–≥–æ–≥–æ CA
    $CertPath = "nginx/ssl"
    
    if (!(Test-Path "$CertPath/cert.pem")) {
        Write-Host "‚ö†Ô∏è –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å–∞–º–æ–ø–æ–¥–ø–∏—Å–∞–Ω–Ω—ã–π SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è..." -ForegroundColor Yellow
        Write-Host "–í –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ –∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç!" -ForegroundColor Red
        
        # –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –¥–ª—è OpenSSL
        @"
[req]
distinguished_name = req_distinguished_name
x509_extensions = v3_req
prompt = no

[req_distinguished_name]
C = US
ST = State
L = City
O = Organization
CN = $Domain

[v3_req]
keyUsage = keyEncipherment, dataEncipherment
extendedKeyUsage = serverAuth
subjectAltName = @alt_names

[alt_names]
DNS.1 = $Domain
DNS.2 = *.$Domain
"@ | Out-File -FilePath "ssl_config.cnf" -Encoding UTF8

        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –ø—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–ª—é—á –∏ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç
        openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout "$CertPath/key.pem" -out "$CertPath/cert.pem" -config ssl_config.cnf
        Remove-Item "ssl_config.cnf" -Force
        
        Write-Host "‚úÖ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç —Å–æ–∑–¥–∞–Ω" -ForegroundColor Green
    }
}

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö —Ñ–∞–π–ª–æ–≤
Write-Host "üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã..." -ForegroundColor Blue

if (!(Test-Path "docker-compose.prod.yml")) {
    Write-Error "–§–∞–π–ª docker-compose.prod.yml –Ω–µ –Ω–∞–π–¥–µ–Ω!"
    exit 1
}

if (!(Test-Path "$EnvFile")) {
    Write-Error "–§–∞–π–ª $EnvFile –Ω–µ –Ω–∞–π–¥–µ–Ω!"
    exit 1
}

if (!(Test-Path "server/dist/index.js")) {
    Write-Warning "–°–µ—Ä–≤–µ—Ä–Ω–∞—è —á–∞—Å—Ç—å –Ω–µ —Å–æ–±—Ä–∞–Ω–∞. –°–æ–±–µ—Ä–µ–º —Å–µ–π—á–∞—Å..."
    Push-Location server
    npm run build
    Pop-Location
}

if (!(Test-Path "dist/index.html")) {
    Write-Warning "–í–µ–±-–≤–µ—Ä—Å–∏—è –Ω–µ —Å–æ–±—Ä–∞–Ω–∞. –°–æ–±–µ—Ä–µ–º —Å–µ–π—á–∞—Å..."
    npm run build:web
}

# –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
Write-Host "üõë –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã..." -ForegroundColor Blue
docker-compose -f docker-compose.prod.yml --env-file $EnvFile down --remove-orphans

# –ü–µ—Ä–µ—Å–æ–±–∏—Ä–∞–µ–º –∏ –∑–∞–ø—É—Å–∫–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
Write-Host "üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º production –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã..." -ForegroundColor Blue
docker-compose -f docker-compose.prod.yml --env-file $EnvFile up --build -d

# –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤
Write-Host "‚è≥ –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤..." -ForegroundColor Yellow
Start-Sleep -Seconds 30

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
Write-Host "üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..." -ForegroundColor Blue
$ContainerStatus = docker-compose -f docker-compose.prod.yml ps --format "table"
Write-Host $ContainerStatus -ForegroundColor Gray

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–±–æ—Ç—É API
Write-Host "üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–±–æ—Ç—É API —Å–µ—Ä–≤–µ—Ä–∞..." -ForegroundColor Blue
$ApiUrl = if ($SkipSSL) { "http://localhost/api/health" } else { "https://localhost/api/health" }

$HealthCheck = $null
for ($i = 1; $i -le 5; $i++) {
    try {
        Write-Host "–ü–æ–ø—ã—Ç–∫–∞ $i –∏–∑ 5..." -ForegroundColor Yellow
        $HealthCheck = Invoke-RestMethod -Uri $ApiUrl -TimeoutSec 10 -SkipCertificateCheck
        if ($HealthCheck) { break }
    } catch {
        Write-Host "–ü–æ–ø—ã—Ç–∫–∞ $i –Ω–µ—É–¥–∞—á–Ω–∞: $($_.Exception.Message)" -ForegroundColor Yellow
        if ($i -lt 5) { Start-Sleep -Seconds 10 }
    }
}

if ($HealthCheck -and $HealthCheck.status -eq "ok") {
    Write-Host "‚úÖ API —Å–µ—Ä–≤–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ" -ForegroundColor Green
    if ($HealthCheck.database) {
        Write-Host "‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö: $($HealthCheck.database)" -ForegroundColor Green
    }
} else {
    Write-Warning "‚ùå API —Å–µ—Ä–≤–µ—Ä –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç –∏–ª–∏ —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ"
    Write-Host "üìã –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏: docker-compose -f docker-compose.prod.yml logs worktime-server-prod" -ForegroundColor Yellow
}

# –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏—Ç–æ–≥–æ–≤—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
Write-Host "`nüéâ –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!" -ForegroundColor Green

$Protocol = if ($SkipSSL) { "http" } else { "https" }
$HostName = if ($Domain -eq "yourdomain.com") { "localhost" } else { $Domain }

Write-Host "üåê –í–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ: $Protocol`://$HostName" -ForegroundColor Cyan
Write-Host "üîó API: $Protocol`://$HostName/api" -ForegroundColor Cyan
Write-Host "üíö Health Check: $Protocol`://$HostName/api/health" -ForegroundColor Cyan

Write-Host "`nüìã –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:" -ForegroundColor Yellow
Write-Host "‚Ä¢ –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤: docker-compose -f docker-compose.prod.yml logs -f" -ForegroundColor White
Write-Host "‚Ä¢ –û—Å—Ç–∞–Ω–æ–≤–∫–∞: docker-compose -f docker-compose.prod.yml down" -ForegroundColor White
Write-Host "‚Ä¢ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫: docker-compose -f docker-compose.prod.yml restart" -ForegroundColor White

Write-Host "`n‚ö†Ô∏è –í–∞–∂–Ω—ã–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è:" -ForegroundColor Red
Write-Host "1. –ó–∞–º–µ–Ω–∏—Ç–µ —Å–∞–º–æ–ø–æ–¥–ø–∏—Å–∞–Ω–Ω—ã–π SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π" -ForegroundColor White
Write-Host "2. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö" -ForegroundColor White
Write-Host "3. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Å–∏—Å—Ç–µ–º—ã" -ForegroundColor White
Write-Host "4. –û–±–Ω–æ–≤–∏—Ç–µ DNS –∑–∞–ø–∏—Å–∏ –¥–ª—è –¥–æ–º–µ–Ω–∞ $Domain" -ForegroundColor White 