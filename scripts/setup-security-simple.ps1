# Simplified Security Setup Script for WorkTime Tracker
Write-Host "üîí –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ WorkTime Tracker..." -ForegroundColor Green

# –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
Write-Host "üìÅ –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π..." -ForegroundColor Yellow
New-Item -ItemType Directory -Force -Path "secrets"
New-Item -ItemType Directory -Force -Path "nginx/ssl"  
New-Item -ItemType Directory -Force -Path "fail2ban"
New-Item -ItemType Directory -Force -Path "server/logs"
New-Item -ItemType Directory -Force -Path "nginx/html"
New-Item -ItemType Directory -Force -Path "nginx/conf.d"

# –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–µ–∫—Ä–µ—Ç–æ–≤
Write-Host "üîë –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–µ–∫—Ä–µ—Ç–æ–≤..." -ForegroundColor Yellow

function New-SecurePassword {
    param([int]$Length = 64)
    $chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'
    $password = ""
    for($i = 0; $i -lt $Length; $i++) {
        $password += $chars[(Get-Random -Maximum $chars.Length)]
    }
    return $password
}

$dbPassword = New-SecurePassword -Length 32
$jwtSecret = New-SecurePassword -Length 64
$encryptionKey = New-SecurePassword -Length 32

# –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å–µ–∫—Ä–µ—Ç–æ–≤
Write-Host "üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å–µ–∫—Ä–µ—Ç–æ–≤..." -ForegroundColor Yellow
$dbPassword | Out-File -FilePath "secrets/db_password.txt" -NoNewline
$jwtSecret | Out-File -FilePath "secrets/jwt_secret.txt" -NoNewline
$encryptionKey | Out-File -FilePath "secrets/encryption_key.txt" -NoNewline

# –°–æ–∑–¥–∞–Ω–∏–µ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤
Write-Host "üîê –ü—Ä–æ–≤–µ—Ä–∫–∞ OpenSSL..." -ForegroundColor Yellow
try {
    $null = Get-Command openssl -ErrorAction Stop
    Write-Host "‚úÖ OpenSSL –Ω–∞–π–¥–µ–Ω, —Å–æ–∑–¥–∞–Ω–∏–µ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤..." -ForegroundColor Green
    & openssl req -x509 -newkey rsa:4096 -keyout "nginx/ssl/key.pem" -out "nginx/ssl/cert.pem" -days 365 -nodes -subj "/C=US/ST=State/L=City/O=Organization/CN=localhost"
} catch {
    Write-Host "‚ö†Ô∏è OpenSSL –Ω–µ –Ω–∞–π–¥–µ–Ω. –°–æ–∑–¥–∞–π—Ç–µ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã –≤—Ä—É—á–Ω—É—é" -ForegroundColor Red
}

# –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Fail2Ban
Write-Host "üõ°Ô∏è –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Fail2Ban..." -ForegroundColor Yellow
$fail2banText = "[DEFAULT]`nbantime = 3600`nfindtime = 600`nmaxretry = 5`n`n[nginx-http-auth]`nenabled = true`nfilter = nginx-http-auth`nlogpath = /var/log/nginx/access.log`nmaxretry = 3`nbantime = 7200"
$fail2banText | Out-File -FilePath "fail2ban/jail.local" -Encoding UTF8

# –°–æ–∑–¥–∞–Ω–∏–µ proxy_params
Write-Host "üåê –°–æ–∑–¥–∞–Ω–∏–µ proxy_params..." -ForegroundColor Yellow
$proxyText = "proxy_set_header Host `$host;`nproxy_set_header X-Real-IP `$remote_addr;`nproxy_set_header X-Forwarded-For `$proxy_add_x_forwarded_for;`nproxy_set_header X-Forwarded-Proto `$scheme;`nproxy_connect_timeout 30s;"
$proxyText | Out-File -FilePath "nginx/proxy_params" -Encoding UTF8

# –°–æ–∑–¥–∞–Ω–∏–µ PostgreSQL –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
Write-Host "üóÑÔ∏è –°–æ–∑–¥–∞–Ω–∏–µ PostgreSQL –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏..." -ForegroundColor Yellow
$postgresText = "# PostgreSQL Security Configuration`nlisten_addresses = '*'`nport = 5432`nmax_connections = 100`nssl = on`npassword_encryption = scram-sha-256`nlog_connections = on"
$postgresText | Out-File -FilePath "postgres-prod.conf" -Encoding UTF8

# –°–æ–∑–¥–∞–Ω–∏–µ HTML —Å—Ç—Ä–∞–Ω–∏—Ü –æ—à–∏–±–æ–∫
Write-Host "üìÑ –°–æ–∑–¥–∞–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü –æ—à–∏–±–æ–∫..." -ForegroundColor Yellow
$error403Html = "<!DOCTYPE html><html><head><title>Access Denied</title></head><body><h1>403 - Access Denied</h1><p>Your request has been blocked for security reasons.</p></body></html>"
$error429Html = "<!DOCTYPE html><html><head><title>Rate Limited</title></head><body><h1>429 - Too Many Requests</h1><p>Please slow down and try again later.</p></body></html>"

$error403Html | Out-File -FilePath "nginx/html/403.html" -Encoding UTF8
$error429Html | Out-File -FilePath "nginx/html/429.html" -Encoding UTF8

# –°–æ–∑–¥–∞–Ω–∏–µ production.env
Write-Host "‚öôÔ∏è –°–æ–∑–¥–∞–Ω–∏–µ production.env..." -ForegroundColor Yellow
if (Test-Path "production.env.example") {
    $envContent = Get-Content "production.env.example" -Raw
    $envContent = $envContent -replace "your_very_strong_database_password_here_min_32_chars", $dbPassword
    $envContent = $envContent -replace "your_super_secret_jwt_key_minimum_256_bits_length_production_only", $jwtSecret
    $envContent = $envContent -replace "your_256_bit_encryption_key_for_sensitive_data", $encryptionKey
    $envContent = $envContent -replace "yourdomain\.com", "localhost"
    $envContent | Out-File -FilePath "production.env" -Encoding UTF8
    Write-Host "‚úÖ production.env —Å–æ–∑–¥–∞–Ω" -ForegroundColor Green
} else {
    Write-Host "‚ö†Ô∏è production.env.example –Ω–µ –Ω–∞–π–¥–µ–Ω" -ForegroundColor Red
}

Write-Host "`n‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!" -ForegroundColor Green
Write-Host "`nüìã –°–æ–∑–¥–∞–Ω—ã —Ñ–∞–π–ª—ã:" -ForegroundColor Cyan
Write-Host "   ‚Ä¢ secrets/ - —Å–µ–∫—Ä–µ—Ç–Ω—ã–µ –∫–ª—é—á–∏ –∏ –ø–∞—Ä–æ–ª–∏" -ForegroundColor White
Write-Host "   ‚Ä¢ nginx/ssl/ - SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã" -ForegroundColor White
Write-Host "   ‚Ä¢ nginx/html/ - —Å—Ç—Ä–∞–Ω–∏—Ü—ã –æ—à–∏–±–æ–∫" -ForegroundColor White
Write-Host "   ‚Ä¢ fail2ban/jail.local - –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Fail2Ban" -ForegroundColor White
Write-Host "   ‚Ä¢ production.env - –ø—Ä–æ–¥–∞–∫—à–Ω –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ" -ForegroundColor White

Write-Host "`n‚ö†Ô∏è –í–∞–∂–Ω–æ:" -ForegroundColor Yellow
Write-Host "   ‚Ä¢ –ò–∑–º–µ–Ω–∏—Ç–µ –¥–æ–º–µ–Ω –≤ nginx/nginx.prod.conf" -ForegroundColor Red
Write-Host "   ‚Ä¢ –û–±–Ω–æ–≤–∏—Ç–µ IP –∞–¥—Ä–µ—Å–∞ –¥–ª—è –∞–¥–º–∏–Ω–∞" -ForegroundColor Red  
Write-Host "   ‚Ä¢ –î–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞ –ø–æ–ª—É—á–∏—Ç–µ —Ä–µ–∞–ª—å–Ω—ã–µ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã" -ForegroundColor Red

Write-Host "`nüöÄ –î–ª—è –∑–∞–ø—É—Å–∫–∞ –≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ:" -ForegroundColor Green
Write-Host "   docker-compose -f docker-compose.prod.yml up -d" -ForegroundColor White 