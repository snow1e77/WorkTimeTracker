# OpenSSL Installation Script for Windows
# –°–∫—Ä–∏–ø—Ç —É—Å—Ç–∞–Ω–æ–≤–∫–∏ OpenSSL –¥–ª—è Windows

Write-Host "üîß –£—Å—Ç–∞–Ω–æ–≤–∫–∞ OpenSSL –¥–ª—è Windows..." -ForegroundColor Green

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
function Test-Administrator {
    $currentUser = [Security.Principal.WindowsIdentity]::GetCurrent()
    $principal = New-Object Security.Principal.WindowsPrincipal($currentUser)
    return $principal.IsInRole([Security.Principal.WindowsBuiltInRole]::Administrator)
}

# –§—É–Ω–∫—Ü–∏—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ —á–µ—Ä–µ–∑ Chocolatey
function Install-ViaChocolatey {
    Write-Host "üì¶ –ü—Ä–æ–≤–µ—Ä–∫–∞ Chocolatey..." -ForegroundColor Yellow
    
    if (-not (Get-Command choco -ErrorAction SilentlyContinue)) {
        Write-Host "Chocolatey –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º..." -ForegroundColor Yellow
        
        # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Chocolatey
        Set-ExecutionPolicy Bypass -Scope Process -Force
        [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072
        iex ((New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1'))
        
        # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ PATH
        $env:PATH = [Environment]::GetEnvironmentVariable("PATH", "Machine") + ";" + [Environment]::GetEnvironmentVariable("PATH", "User")
        
        if (Get-Command choco -ErrorAction SilentlyContinue) {
            Write-Host "‚úÖ Chocolatey —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω" -ForegroundColor Green
        } else {
            Write-Host "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å Chocolatey" -ForegroundColor Red
            return $false
        }
    }
    
    Write-Host "üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ OpenSSL —á–µ—Ä–µ–∑ Chocolatey..." -ForegroundColor Yellow
    try {
        choco install openssl -y
        
        # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ PATH
        $env:PATH = [Environment]::GetEnvironmentVariable("PATH", "Machine") + ";" + [Environment]::GetEnvironmentVariable("PATH", "User")
        
        if (Get-Command openssl -ErrorAction SilentlyContinue) {
            Write-Host "‚úÖ OpenSSL —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —á–µ—Ä–µ–∑ Chocolatey" -ForegroundColor Green
            return $true
        } else {
            Write-Host "‚ùå OpenSSL —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, –Ω–æ –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ PATH" -ForegroundColor Red
            return $false
        }
    }
    catch {
        Write-Host "‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ —á–µ—Ä–µ–∑ Chocolatey: $($_.Exception.Message)" -ForegroundColor Red
        return $false
    }
}

# –§—É–Ω–∫—Ü–∏—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –≤—Ä—É—á–Ω—É—é
function Install-Manually {
    Write-Host "üì• –†—É—á–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ OpenSSL..." -ForegroundColor Yellow
    
    $downloadUrl = "https://slproweb.com/download/Win64OpenSSL_Light-3_1_4.exe"
    $installerPath = "$env:TEMP\OpenSSL-Win64.exe"
    
    try {
        Write-Host "–°–∫–∞—á–∏–≤–∞–Ω–∏–µ OpenSSL..." -ForegroundColor Yellow
        Invoke-WebRequest -Uri $downloadUrl -OutFile $installerPath -UseBasicParsing
        
        Write-Host "–ó–∞–ø—É—Å–∫ —É—Å—Ç–∞–Ω–æ–≤—â–∏–∫–∞..." -ForegroundColor Yellow
        Start-Process -FilePath $installerPath -ArgumentList "/VERYSILENT /NORESTART /DIR=C:\OpenSSL-Win64" -Wait
        
        # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ PATH
        $opensslPath = "C:\OpenSSL-Win64\bin"
        if (Test-Path $opensslPath) {
            $currentPath = [Environment]::GetEnvironmentVariable("PATH", "Machine")
            if ($currentPath -notlike "*$opensslPath*") {
                [Environment]::SetEnvironmentVariable("PATH", "$currentPath;$opensslPath", "Machine")
                $env:PATH += ";$opensslPath"
            }
            
            Write-Host "‚úÖ OpenSSL —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤: $opensslPath" -ForegroundColor Green
            return $true
        } else {
            Write-Host "‚ùå –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–µ —É–¥–∞–ª–∞—Å—å" -ForegroundColor Red
            return $false
        }
    }
    catch {
        Write-Host "‚ùå –û—à–∏–±–∫–∞ —Ä—É—á–Ω–æ–π —É—Å—Ç–∞–Ω–æ–≤–∫–∏: $($_.Exception.Message)" -ForegroundColor Red
        return $false
    }
    finally {
        if (Test-Path $installerPath) {
            Remove-Item $installerPath -Force
        }
    }
}

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∏
function Test-OpenSSLInstallation {
    try {
        $version = & openssl version 2>&1
        if ($LASTEXITCODE -eq 0) {
            Write-Host "‚úÖ OpenSSL –Ω–∞–π–¥–µ–Ω: $version" -ForegroundColor Green
            return $true
        } else {
            return $false
        }
    }
    catch {
        return $false
    }
}

# –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞
Write-Host "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ–∫—É—â–µ–π —É—Å—Ç–∞–Ω–æ–≤–∫–∏ OpenSSL..." -ForegroundColor Cyan

if (Test-OpenSSLInstallation) {
    Write-Host "‚úÖ OpenSSL —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!" -ForegroundColor Green
    & openssl version
    exit 0
}

Write-Host "‚ùå OpenSSL –Ω–µ –Ω–∞–π–¥–µ–Ω. –ù–∞—á–∏–Ω–∞–µ–º —É—Å—Ç–∞–Ω–æ–≤–∫—É..." -ForegroundColor Yellow

if (-not (Test-Administrator)) {
    Write-Host "‚ö†Ô∏è –î–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ —Ç—Ä–µ–±—É—é—Ç—Å—è –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞" -ForegroundColor Yellow
    Write-Host "–ó–∞–ø—É—Å—Ç–∏—Ç–µ PowerShell –æ—Ç –∏–º–µ–Ω–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É" -ForegroundColor Yellow
    
    # –ü–æ–ø—ã—Ç–∫–∞ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ —Å –ø—Ä–∞–≤–∞–º–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    $currentScript = $MyInvocation.MyCommand.Path
    Start-Process PowerShell -ArgumentList "-ExecutionPolicy Bypass -File `"$currentScript`"" -Verb RunAs
    exit 0
}

Write-Host "`nüîß –í—ã–±–µ—Ä–∏—Ç–µ –º–µ—Ç–æ–¥ —É—Å—Ç–∞–Ω–æ–≤–∫–∏:" -ForegroundColor Cyan
Write-Host "1. –ß–µ—Ä–µ–∑ Chocolatey (—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è)" -ForegroundColor White
Write-Host "2. –†—É—á–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∞" -ForegroundColor White

$choice = Read-Host "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä (1-2)"

switch ($choice) {
    "1" { 
        $success = Install-ViaChocolatey
    }
    "2" { 
        $success = Install-Manually
    }
    default { 
        Write-Host "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä" -ForegroundColor Red
        exit 1
    }
}

if ($success) {
    Write-Host "`n‚úÖ OpenSSL —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!" -ForegroundColor Green
    Write-Host "–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –∑–∞–ø—É—Å—Ç–∏—Ç—å setup-ssl.ps1 –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤" -ForegroundColor Cyan
    
    # –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
    if (Test-OpenSSLInstallation) {
        Write-Host "`nüìã –í–µ—Ä—Å–∏—è OpenSSL:" -ForegroundColor Cyan
        & openssl version
    }
} else {
    Write-Host "`n‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å OpenSSL" -ForegroundColor Red
    Write-Host "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Ä—É—á–Ω—É—é —Å https://slproweb.com/products/Win32OpenSSL.html" -ForegroundColor Yellow
    exit 1
} 