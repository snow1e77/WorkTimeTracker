#!/bin/bash

echo "========================================"
echo "  Work Time Tracker - –û—Å—Ç–∞–Ω–æ–≤–∫–∞ macOS"
echo "========================================"

# –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –ø–∞–ø–∫—É –ø—Ä–æ–µ–∫—Ç–∞
cd "$(dirname "$0")"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ docker-compose.yml
if [ ! -f "docker-compose.yml" ]; then
    echo "‚ö†Ô∏è  –§–∞–π–ª docker-compose.yml –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Ç–µ–∫—É—â–µ–π –ø–∞–ø–∫–µ"
    echo "–£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ –∑–∞–ø—É—Å–∫–∞–µ—Ç–µ —Å–∫—Ä–∏–ø—Ç –∏–∑ –∫–æ—Ä–Ω–µ–≤–æ–π –ø–∞–ø–∫–∏ –ø—Ä–æ–µ–∫—Ç–∞"
fi

echo ""
echo "üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
if command -v docker-compose &> /dev/null; then
    docker-compose down
    
    if [ $? -eq 0 ]; then
        echo "‚úÖ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
    else
        echo "‚ö†Ô∏è  –ù–µ–∫–æ—Ç–æ—Ä—ã–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –º–æ–≥–ª–∏ –Ω–µ –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å—Å—è"
    fi
    
    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞
    echo "üßπ –û—á–∏—Å—Ç–∫–∞ –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã—Ö Docker —Ä–µ—Å—É—Ä—Å–æ–≤..."
    docker system prune -f 2>/dev/null || true
else
    echo "‚ö†Ô∏è  Docker Compose –Ω–µ –Ω–∞–π–¥–µ–Ω"
fi

echo ""
echo "üßπ –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤..."

# –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å—ã Node.js –Ω–∞ –ø–æ—Ä—Ç–∞—Ö –ø—Ä–æ–µ–∫—Ç–∞
for port in 3001 19006 3000 8081; do
    if command -v lsof &> /dev/null; then
        pid=$(lsof -ti:$port 2>/dev/null)
        if [ ! -z "$pid" ]; then
            echo "–û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–æ—Ü–µ—Å—Å–∞ –Ω–∞ –ø–æ—Ä—Ç—É $port (PID: $pid)"
            kill -TERM $pid 2>/dev/null
            sleep 2
            # –ï—Å–ª–∏ –ø—Ä–æ—Ü–µ—Å—Å –≤—Å–µ –µ—â–µ —Ä–∞–±–æ—Ç–∞–µ—Ç, –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –∑–∞–≤–µ—Ä—à–∞–µ–º –µ–≥–æ
            if kill -0 $pid 2>/dev/null; then
                echo "–ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–æ—Ü–µ—Å—Å–∞ $pid"
                kill -KILL $pid 2>/dev/null
            fi
        fi
    else
        echo "‚ö†Ô∏è  lsof –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –ø–æ—Ä—Ç–æ–≤"
        break
    fi
done

# –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Metro bundler (React Native)
metro_pid=$(ps aux | grep 'metro' | grep -v grep | awk '{print $2}' 2>/dev/null)
if [ ! -z "$metro_pid" ]; then
    echo "–û—Å—Ç–∞–Ω–æ–≤–∫–∞ Metro bundler (PID: $metro_pid)"
    kill -TERM $metro_pid 2>/dev/null || true
fi

# –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Expo –ø—Ä–æ—Ü–µ—Å—Å—ã
expo_pid=$(ps aux | grep 'expo' | grep -v grep | awk '{print $2}' 2>/dev/null)
if [ ! -z "$expo_pid" ]; then
    echo "–û—Å—Ç–∞–Ω–æ–≤–∫–∞ Expo –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ (PID: $expo_pid)"
    kill -TERM $expo_pid 2>/dev/null || true
fi

echo ""
echo "‚úÖ –ü—Ä–æ–µ–∫—Ç –ø–æ–ª–Ω–æ—Å—Ç—å—é –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
echo ""
echo "üìã –î–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ:"
echo "./quick-start-mac.sh"
echo ""
echo "üîç –î–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ:"
echo "./check-services-mac.sh" 